type Query {
  users(queryName: String, id: String): [User!]!
  posts(queryContent: String, id: String): [Post!]!
  comments(queryText: String, id: String): [Comment!]!
}

type Mutation {
  addPost(data: AddPostInput!): Post!
  updatePost(id: String!, data: UpdatePostInput!): Post!
  deletePost(id: String!): [Post!]!

  addComment(data: AddCommentInput!): Comment!
  updateComment(id: String!, data: UpdateCommentInput!): Comment!
  deleteComment(id: String!): [Comment!]!

  addUser(data: AddUserInput!): User!
  updateUser(id: String!, data: UpdateUserInput!): User!
  deleteUser(id: String!): [User!]!
}

input AddPostInput {
  title: String!,
  body: String!,
  published: Boolean!,
  author: String!
}

input AddCommentInput {
  text: String!,
  author: String!,
  post: String!
}

input AddUserInput {
  name: String!,
  email: String!,
  age: Int
}

input UpdateCommentInput {
  text: String,
}

input UpdateUserInput {
  name: String,
  email: String,
  age: Int
}

input UpdatePostInput {
  title: String,
  body: String,
  published: Boolean,
}

type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  posts: [Post!]!
  comments: [Comment!]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}